//  설치3번, 순서1 Querydsl 사용하기 위한 변수 설정.
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.deepbark'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // MariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'

    //1 롬복, 테스트 환경에서 동작하기.
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //2 타임리프, 공통 레이아웃 작업하는 동구.
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    //3, 순서2 Querydsl 이용해서, 동적 sql 다루고, 빌드 패턴이용하고, 자바의 컴파일러 문법 체크 도움도 받기.
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    // 4, 순서4 Querydsl 설정.
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

    // 5, DTO <-> VO(엔티티클래스) 변환기, 필요.
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // 6
    // 서버 입장에서 입력된 데이터 유효성 검증 도구
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.0'

    // 7
    // Rest 테스트 도구, 스웨거 설치,
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // 8
    // thumbnailator 설치, 원본 -> 작은 이미지 변환
    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.20'

    // 9
    //thymeleaf-extras-springsecurity6  시큐리티 연동, 권한별 화면 표시
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity6
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.3.RELEASE'

    // 10
    // 카카오로그인 도구
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '3.4.0'

    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // DTO Mapping
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // HTTP Client
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // JSON Processing
    implementation 'com.google.code.gson:gson:2.10.1'

    // Image Processing
    implementation 'net.coobird:thumbnailator:0.4.20'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl  설치, 순서3 프로젝트를 빌드 할 때마다, 해당 Q 도메인을 소스로 등록하는 과정을, 자동으로
sourceSets {

    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

compileJava.dependsOn('clean')
